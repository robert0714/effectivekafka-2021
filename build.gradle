plugins {
  id 'maven-publish'
  id 'application'
}

def baseJvmArgs = [
  "--add-opens=java.base/java.io=ALL-UNNAMED",
  "--add-opens=java.base/java.lang=ALL-UNNAMED",
  "--add-opens=java.base/java.lang.invoke=ALL-UNNAMED",
  "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
  "--add-opens=java.base/java.nio=ALL-UNNAMED",
  "--add-opens=java.base/java.nio.charset=ALL-UNNAMED",
  "--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED",
  "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED",
  "-Djava.net.preferIPv4Stack=true"
]
project.ext.set("baseJvmArgs", baseJvmArgs)

allprojects {
  apply plugin: "java"
  
  sourceCompatibility = 11 
  targetCompatibility = 11

  repositories {
    jcenter()
    maven {
      url "https://oss.sonatype.org/content/repositories/snapshots"
    }
  }
  
  ext {
    assertjVersion = "3.22.0"
    fulcrumVersion = "0.36.0"
    jacksonVersion = "2.13.2"
    junitVersion = "4.13.2"
    kafkaVersion = "3.2.0"
    log4jVersion = "2.17.2"
    slf4jVersion = "1.7.36"
  }
  
  dependencies {
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compileOnly 'org.projectlombok:lombok:1.18.24'
    
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    testImplementation "junit:junit:${junitVersion}"
  }
  
  compileJava {
    options.compilerArgs += "-proc:none"
  }

  compileTestJava {
    options.compilerArgs += "-proc:none"
  }
  
  tasks.withType(JavaCompile) {
    options.fork = true
    options.incremental = true
  }

  test {
    jvmArgs += baseJvmArgs
  }
}

subprojects {
}

dependencies {
  implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
  implementation "com.obsidiandynamics.fulcrum:fulcrum-worker:${fulcrumVersion}"
  implementation "org.apache.kafka:kafka-clients:${kafkaVersion}"
}
// the GAV of the generated POM can be set here
// gradle generatePomFileForMavenPublication
// gradle publishToLocalRepo
// build/publications/maven subfolder, a file called pom-default.xml.
publishing {
    publications {
        maven(MavenPublication) {          
            pom{
              name = 'effectivekafka'
              groupId = 'effectivekafka'
              artifactId = 'effectivekafka'
              version = '1.0.0-SNAPSHOT'
              properties = [
                    "java.version": "11",
                    "avro.version": "1.11.0",
                    "kafka.version": "3.2.0",
                    "project.build.sourceEncoding": "UTF-8"
                ]
            }
            from components.java           
        }
    }
}